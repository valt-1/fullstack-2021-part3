{"version":3,"sources":["services/persons.js","components/Filter.js","components/Notification.js","components/PersonForm.js","components/Person.js","components/Persons.js","App.js","index.js"],"names":["baseUrl","persons","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","remove","delete","Filter","filterStr","handleFilterStrChange","value","onChange","Notification","message","style","color","background","borderRadius","padding","PersonForm","props","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","Person","person","deletePerson","name","number","onClick","Persons","map","App","useState","setPersons","setNewName","setNewNumber","setFilterStr","notification","setNotification","useEffect","personService","notify","setTimeout","personsToShow","filter","toLowerCase","includes","event","target","preventDefault","existing","length","existingPerson","window","confirm","returnedPerson","catch","error","personObject","concat","find","p","alert","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9de7ac40.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst persons = { getAll, create, update, remove }\nexport default persons\n","import React from 'react'\n\nconst Filter = ({ filterStr, handleFilterStrChange }) => {\n  return (\n    <p>\n      filter shown with \n      <input \n        value={filterStr}\n        onChange={handleFilterStrChange}\n      />\n    </p>\n  )\n}  \n\nexport default Filter\n","import React from 'react'\n\nconst Notification = ({ message }) => {\n  const style = {\n    color: 'black',\n    background: 'lightgray',\n    borderRadius: 10,\n    padding: 8\n  }\n  \n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div style={style}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification\n","import React from 'react'\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.addPerson}>\n      <div>\n        name: \n        <input \n          value={props.newName}\n          onChange={props.handleNameChange}\n        />\n      </div>\n      <div>\n        number: \n        <input \n          value={props.newNumber}\n          onChange={props.handleNumberChange}\n        />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm\n","import React from 'react'\n\nconst Person = ({ person, deletePerson }) => {\n  return (\n    <li>\n      {person.name} {person.number}\n      <button onClick={deletePerson}>delete</button>\n    </li>\n  )\n}\n\nexport default Person\n","import React from 'react'\nimport Person from './Person'\n\nconst Persons = ({ persons, deletePerson }) => {\n  return (\n    <ul>\n      {persons.map(person =>\n        <Person\n          key={person.name}\n          person={person}\n          deletePerson={() => deletePerson(person.id)}\n        />)}\n    </ul>\n  )\n}\n\nexport default Persons\n","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filterStr, setFilterStr ] = useState('')\n  const [ notification, setNotification ] = useState(null)\n\n  const hook = () => {\n    personService\n      .getAll()\n      .then(persons => setPersons(persons))\n  }\n  useEffect(hook, [])\n\n  const notify = (message) => {\n    setNotification(message)\n    setTimeout(() => {\n      setNotification(null)\n    }, 5000)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const existing = persons.filter(person => \n      person.name.toLowerCase() === newName.toLowerCase())\n    if (existing.length > 0) {\n      const existingPerson = existing[0]\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        personService\n          .update(existingPerson.id, {name: existingPerson.name, number: newNumber})\n          .then(returnedPerson => {\n            setPersons(persons.map(person => person.id !== existingPerson.id ? person : returnedPerson))\n            setNewName('')\n            setNewNumber('')\n          })\n          .catch(error => {\n            notify(error.response.data.error)\n          })\n      }\n    } else {\n      const personObject = {\n        name: newName,\n        number: newNumber\n      }\n      personService\n        .create(personObject)\n        .then(person => {\n          setPersons(persons.concat(person))\n          notify(`Added ${person.name}`)\n          setNewName('')\n          setNewNumber('')\n        })\n        .catch(error => {\n          notify(error.response.data.error)\n        })\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterStrChange = (event) => {\n    setFilterStr(event.target.value)\n  }\n\n  const personsToShow = persons.filter(person => person.name.toLowerCase().includes(filterStr.toLowerCase()))\n\n  const deletePerson = (id) => {\n    const person = persons.find(p => p.id === id)\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personService\n      .remove(id)\n      .then(setPersons(persons.filter(p => p.id !== id)))\n      .catch(error => {\n        alert(`${person.name} was already deleted from server`)\n        setPersons(persons.filter(p => p.id !== id))\n      })\n      \n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter\n        filterStr={filterStr}\n        handleFilterStrChange={handleFilterStrChange}\n      />\n      <h3>Add new</h3>\n      <Notification message={notification} />\n      <PersonForm \n        persons={persons}\n        newName={newName}\n        newNumber={newNumber}\n        addPerson={addPerson}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n      />\n      <h3>Numbers</h3>\n      <Persons\n        persons={personsToShow}\n        deletePerson={deletePerson}\n      />\n    </div>\n  )\n\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)\n"],"sourceRoot":""}